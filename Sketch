from function import  Ar2_radial_profile, Gaussian, distance_through_toroid
import matplotlib
import matplotlib.pyplot as plt
import matplotlib.transforms as transf
from PIL import Image
import numpy as np
from scipy.optimize import curve_fit
from Analyse_data import Ar2_N_int

""" Make figure """
fs=20
cm = 1/2.54
matplotlib.rcParams["font.family"] = "Times New Roman"
matplotlib.rcParams["mathtext.fontset"] = "cm"

fig, ax = plt.subplots(figsize=(21*cm,16*cm))
base = plt.gca().transData
rot = transf.Affine2D().rotate_deg(90)


""" Through toroid representation """
x__ = np.arange(-1,1,0.001)
y_cylinder = distance_through_toroid(x_=x__, r_1=0.8, w_t=0.2)
ax.plot(x__, y_cylinder, color='k', lw=2, transform= rot + base)
ax.set_xlim(-5, 0.4)
ax.set_ylim(-3.6, 1.2)

ax.annotate("", xy=(0.03, 1.15), xytext=(0.03, -1.15), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))
ax.text(-0.02, 1.17, 'x',  fontsize=fs)

ax.annotate("", xy=(-1.3, 0), xytext=(0.03, 0), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))
ax.text(-1.6, 0.15, 'n$_{t,int}$ (x)',  fontsize=fs)

ax.annotate("", xy=(-2.7, 1.15), xytext=(-2.7, -1.15), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))
ax.text(-2.75, 1.17, 'x',  fontsize=fs)

ax.annotate("", xy=(-1.6, 0), xytext=(-3.7, 0), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))
ax.text(-1.75, -0.25, 'y',  fontsize=fs)

ax.plot([-2.7, -2.15], [0, 0.58], color='k', lw=2)
ax.text(-2.4, 0.15, 'r$_{t}$',  fontsize=fs)

ax.annotate("", xy=(-3.25, 0), xytext=(-3.55, 0), arrowprops=dict(arrowstyle="<->,head_length=0.4,head_width=0.2", lw="2"))
ax.text(-3.85, 0.07, 't$_{t}$',  fontsize=fs)

ax.text(-2.25, -0.81, 'n$_{t}$(x,y)',  fontsize=fs)

circle_1 = plt.Circle((-2.7, 0),0.8,fill=True, color='xkcd:cerulean', lw=3,zorder=1)
circle_1_ = plt.Circle((-2.7, 0),0.8,fill=False, ls='--', lw=2,zorder=1)
circle_2 = plt.Circle((-2.7, 0),0.6,fill=True, color='white',zorder=1)
circle_2_ = plt.Circle((-2.7, 0),0.6,fill=False, ls='--', lw=2,zorder=1)


ax.set_aspect(1)
ax.add_artist(circle_1)
ax.add_artist(circle_1_)
ax.add_artist(circle_2)
ax.add_artist(circle_2_)


laser1 = plt.Rectangle((-4.8, 0.3),0.8,0.4,fill=True, color='grey', lw=2,zorder=1)
laser1_ = plt.Rectangle((-4.8, 0.3),0.8,0.4,fill=False, color='k', lw=2,zorder=2)
ax.add_artist(laser1)
ax.add_artist(laser1_)

ax.text(-4.77, 0.43, 'LASER',  fontsize=16)
ax.plot([-3.98, 0.03], [0.5, 0.5], color='g', lw=2)


""" Plus """
ax.plot(-1.3,-1.225, '+',mew=10,ms=30, color='k')


""" Through Gaussian representation """
x__ = np.arange(-1,1,0.001)
y_gaussian = Gaussian(x_=x__, x0=0, w=0.8)
x__ = [x-2.45 for x in x__]
ax.plot(x__, y_gaussian, color='k', lw=2, transform= rot + base)


ax.annotate("", xy=(0.03, -1.3), xytext=(0.03, -3.6), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))

ax.annotate("", xy=(-1.3, -2.45), xytext=(0.03, -2.45), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))
ax.text(-1.8, -2.3, 'n$_{g,int}$(x)',  fontsize=fs)

ax.annotate("", xy=(-2.7, -1.3), xytext=(-2.7, -3.6), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))

ax.annotate("", xy=(-1.6, -2.45), xytext=(-3.7, -2.45), arrowprops=dict(arrowstyle="->,head_length=0.6,head_width=0.4", lw="2"))
ax.text(-1.75, -2.7, 'y',  fontsize=fs)


ax.plot([-2.7, -2.3], [-2.45, -2], color='k', lw=2)
ax.text(-2.48, -2.36, 'w$_{g}$',  fontsize=fs)

ax.text(-2.25, -3.4, 'n$_{g}$(x,y)',  fontsize=fs)


# Create solid Gaussian distribution
im = Image.new(mode='RGB', size=(200,200), color=(4,133,222))

# Create Gaussian radial alpha/transparency layer. 255 in centre, 0 at edge
Y = np.linspace(-1, 1, 200)[None,:]
X = np.linspace(-1, 1, 200)[:,None]

d = np.sqrt(X**2+Y**2)
alpha = 255*np.exp(-d**2/0.5**2 )

# Push that radial gradient transparency onto red image and save
im.putalpha(Image.fromarray(alpha.astype(np.uint8)))


img = ax.imshow(im, origin ='lower', extent=(-3.8,-1.6,-3.55,-1.35))
circle_gaussian_ = plt.Circle((-2.7, -2.45),0.6,fill=False, ls='--', lw=2,zorder=2)

ax.set_aspect(1)
ax.add_artist(circle_gaussian_)


laser1 = plt.Rectangle((-4.8, -2.15),0.8,0.4,fill=True, color='grey', lw=2,zorder=1)
laser1_ = plt.Rectangle((-4.8, -2.15),0.8,0.4,fill=False, color='k', lw=2,zorder=2)
ax.add_artist(laser1)
ax.add_artist(laser1_)

ax.text(-4.77, -2.02, 'LASER',  fontsize=16)
ax.plot([-3.98, 0.03], [-1.95, -1.95], color='g', lw=2)

plt.axis('off')

#plt.show()

#plt.savefig('M:\\PD_YAG-Dye_2.61\\Argon_excimer_CRDS\\Presentation\\Model sketch.png', format='png', bbox_inches='tight')
plt.savefig('M:\\PD_YAG-Dye_2.61\\Argon_excimer_CRDS\\Publication_2\\figures\\figure5.pdf', format='pdf', bbox_inches='tight')
